3. Snake and Ladder Problem:

Given a snake and ladder board, find the minimum number of dice throws required to reach the last cell from 1st cell. Basically, the player has total control over outcome of dice throw and wants to find out minimum number of throws required to reach last cell. If the player reaches a cell which is base of a ladder, the player has to climb up that ladder and if reaches a cell is mouth of the snake, has to go down to the tail of snake without a dice throw.

For example consider the board shown above, the minimum number of dice throws required to reach cell 30 from cell 1 is 3. Following are steps.

     a. First throw two on dice to reach cell number 3 and then ladder to reach 22.
     b. Then throw 6 to reach 28.
     c. Finally through 2 to reach 30.

Each dice throw will result a value in range of 1 to 6

[11:15]  
Given this input.

a. Come up with a data structure to store the configuration.
b. Find number of snakes and ladders in the board. 
c. Find the minimum number of dice throws required to reach the last cell from 1st cell. 
d. Find the minimum number of dice throws required to reach the last cell from 1st cell, given condition that player has to encounter snake once in the game. (edit
